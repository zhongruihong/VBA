'多个excel导入access
Sub Xls2Mdb()
    Dim filename, fn As Variant
    Dim sh As Worksheet
    Dim RowMax, Row, Str
    Application.ScreenUpdating = False
    '弹出选择文件框（只能选择.xlsx结尾的，如果是03版本，改成.xls即可）
    filename = Application.GetOpenFilename("所有文件(*.xlsx),*.xlsx", , , , True)
    If Not IsArray(filename) Then Exit Sub
    '指定access名称和路径（和当前excel文件同路径）
    mdb = "Database.accdb"
    mdbPath = ThisWorkbook.Path & "\" & mdb
    '创建一个操作access的应用
    Set objAccess = CreateObject("Access.Application")
     '打开指定的access文件
        With objAccess.OpenCurrentDatabase(mdbPath)
    '循环选择的excel文件
    For Each fn In filename
            '每次循环清空sql
            Str = ""
            createSql = ""
            inSql = ""
            '创建adodb连接
            Set conn = CreateObject("adodb.connection")
            conn.Open "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" & mdbPath
            fname = Dir(fn)
            tname = Split(fname, ".")(0)
            Workbooks.Open fname
            For Each sh In ActiveWorkbook.Sheets
                '查询excel数据
                Sql = "SELECT * FROM [Excel 12.0;DATABASE=" & fn & ";].[" & sh.Name & "$];"
                Set rs = conn.Execute(Sql)
                Ar = rs.GetRows
                RowMax = UBound(Ar, 2) '得到数组中数据的下标
                '生成建表语句
                createSql = "create table " & tname & " ("
                For i = 0 To rs.Fields.Count - 1
                    Str = rs(i).Name & " text(20)," & Str
                Next
                createSql = createSql & Left(Str, Len(Str) - 1) & ")"
                conn.Execute (createSql)
                '插入语句
                inSql = "INSERT INTO " & tname & " " & Sql
                conn.Execute (inSql)
            Next
            conn.Close
            Workbooks(fname).Close False
    Next
    End With
    MsgBox "数据导入完毕!", vbInformation, "^_^"
    Set conn = Nothing
    Application.ScreenUpdating = True
End Sub


'获取汉字首字母
'逐个取ASC码

Function getpy(str)

    For i = 1 To Len(str)

        getpy = getpy & getpychar(Mid(str, i, 1))

    Next i

End Function

Function getpychar(char)

    tmp = 65536 + Asc(char)

    If (tmp >= 45217 And tmp <= 45252) Then

    getpychar = "A"

    ElseIf (tmp >= 45253 And tmp <= 45760) Then

    getpychar = "B"

    ElseIf (tmp >= 45761 And tmp <= 46317) Then

    getpychar = "C"

    ElseIf (tmp >= 46318 And tmp <= 46825) Then

    getpychar = "D"

    ElseIf (tmp >= 46826 And tmp <= 47009) Then

    getpychar = "E"

    ElseIf (tmp >= 47010 And tmp <= 47296) Then

    getpychar = "F"

    ElseIf (tmp >= 47297 And tmp <= 47613) Then

    getpychar = "G"

    ElseIf (tmp >= 47614 And tmp <= 48118) Then

    getpychar = "H"

    ElseIf (tmp >= 48119 And tmp <= 49061) Then

    getpychar = "J"

    ElseIf (tmp >= 49062 And tmp <= 49323) Then

    getpychar = "K"

    ElseIf (tmp >= 49324 And tmp <= 49895) Then

    getpychar = "L"

    ElseIf (tmp >= 49896 And tmp <= 50370) Then

    getpychar = "M"

    ElseIf (tmp >= 50371 And tmp <= 50613) Then

    getpychar = "N"

    ElseIf (tmp >= 50614 And tmp <= 50621) Then

    getpychar = "O"

    ElseIf (tmp >= 50622 And tmp <= 50905) Then

    getpychar = "P"

    ElseIf (tmp >= 50906 And tmp <= 51386) Then

    getpychar = "Q"

    ElseIf (tmp >= 51387 And tmp <= 51445) Then

    getpychar = "R"

    ElseIf (tmp >= 51446 And tmp <= 52217) Then

    getpychar = "S"

    ElseIf (tmp >= 52218 And tmp <= 52697) Then

    getpychar = "T"

    ElseIf (tmp >= 52698 And tmp <= 52979) Then

    getpychar = "W"

    ElseIf (tmp >= 52980 And tmp <= 53640) Then

    getpychar = "X"

    ElseIf (tmp >= 53679 And tmp <= 54480) Then

    getpychar = "Y"

    ElseIf (tmp >= 54481 And tmp <= 62289) Then

    getpychar = "Z"

    Else '如果不是中文，则不处理

    getpychar = char

    End If

End Function
